import _defineProperty from "@babel/runtime/helpers/defineProperty";
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var lineHeightScale = {
  lineHeight: {
    LineHeight100: {
      value: '16px',
      attributes: {
        group: 'scale'
      }
    },
    LineHeight200: {
      value: '20px',
      attributes: {
        group: 'scale'
      }
    },
    LineHeight300: {
      value: '24px',
      attributes: {
        group: 'scale'
      }
    },
    LineHeight400: {
      value: '28px',
      attributes: {
        group: 'scale'
      }
    },
    LineHeight500: {
      value: '32px',
      attributes: {
        group: 'scale'
      }
    },
    LineHeight600: {
      value: '40px',
      attributes: {
        group: 'scale'
      }
    }
  }
};
var fontWeightScale = {
  fontWeight: {
    FontWeightRegular: {
      value: '400',
      attributes: {
        group: 'scale'
      }
    },
    FontWeightMedium: {
      value: '500',
      attributes: {
        group: 'scale'
      }
    },
    FontWeightSemiBold: {
      value: '600',
      attributes: {
        group: 'scale'
      }
    },
    FontWeightBold: {
      value: '700',
      attributes: {
        group: 'scale'
      }
    }
  }
};
var fontFamilyPalette = {
  fontFamily: {
    FontFamilySans: {
      value: "-apple-system, BlinkMacSystemFont, \"Segoe UI\", \"Roboto\", \"Oxygen\", \"Ubuntu\", \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\", sans-serif",
      attributes: {
        group: 'scale'
      }
    },
    FontFamilyMonospace: {
      value: "\"SFMono-Medium\", \"SF Mono\", \"Segoe UI Mono\", \"Roboto Mono\", \"Ubuntu Mono\", Menlo, Consolas, Courier, monospace",
      attributes: {
        group: 'scale'
      }
    }
  }
};
var fontSizeScale = {
  fontSize: {
    FontSize050: {
      value: '11px',
      attributes: {
        group: 'scale'
      }
    },
    FontSize075: {
      value: '12px',
      attributes: {
        group: 'scale'
      }
    },
    FontSize100: {
      value: '14px',
      attributes: {
        group: 'scale'
      }
    },
    FontSize200: {
      value: '16px',
      attributes: {
        group: 'scale'
      }
    },
    FontSize300: {
      value: '20px',
      attributes: {
        group: 'scale'
      }
    },
    FontSize400: {
      value: '24px',
      attributes: {
        group: 'scale'
      }
    },
    FontSize500: {
      value: '29px',
      attributes: {
        group: 'scale'
      }
    },
    FontSize600: {
      value: '35px',
      attributes: {
        group: 'scale'
      }
    }
  }
};
var typographyPalette = {
  typography: _objectSpread(_objectSpread(_objectSpread(_objectSpread({}, fontSizeScale), fontWeightScale), fontFamilyPalette), lineHeightScale)
};
export default typographyPalette;